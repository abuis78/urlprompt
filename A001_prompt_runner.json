{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_4",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_4_to_port_9",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_6_to_port_1",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_9_to_port_12",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_1",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_4_to_port_13",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_13_to_port_1",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 190,
                    "y": 0
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 190,
                    "y": 1016
                },
                "12": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "artifact_create_2",
                        "id": "12",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": null,
                                "cef_value": null,
                                "container": "container:id",
                                "input_json": "build_json_from_the_response:custom_function:response_json",
                                "label": null,
                                "name": "Prompt answer",
                                "run_automation": "false",
                                "severity": null,
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "12",
                    "type": "utility",
                    "warnings": {},
                    "x": 340,
                    "y": 844.5
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "unknown prompt status",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "unknown_prompt_status",
                        "id": "13",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "unknown prompt status"
                            }
                        }
                    },
                    "errors": {},
                    "id": "13",
                    "type": "utility",
                    "warnings": {},
                    "x": 680,
                    "y": 664.5
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "filter get prompt artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "URL Prompt"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "URL Prompt",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_get_prompt_artifact",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "warnings": {},
                    "x": 230,
                    "y": 148
                },
                "3": {
                    "data": {
                        "action": "check status",
                        "actionType": "contain",
                        "advanced": {
                            "customName": "check the status of the prompt",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "URL Prompt",
                        "connectorConfigs": [
                            "urlprompt"
                        ],
                        "connectorId": "709b9d9a-fa75-4ab1-95c1-474f65ba6c43",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "check_the_status_of_the_prompt",
                        "id": "3",
                        "parameters": {
                            "id": "filtered-data:filter_get_prompt_artifact:condition_1:artifact:*.cef.prompt_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "action",
                    "warnings": {},
                    "x": 170,
                    "y": 328
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "decission check status",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "check_the_status_of_the_prompt:action_result.data.*.status",
                                        "value": "pending"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "pending",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "check_the_status_of_the_prompt:action_result.data.*.status",
                                        "value": "complete"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "complete",
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "unknown status",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decission_check_status",
                        "id": "4",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "decision",
                    "warnings": {},
                    "x": 250,
                    "y": 492
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "filter runner artifact",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.name",
                                        "value": "scheduled playbook"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "scheduled playbook",
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "filter_runner_artifact",
                        "id": "5",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "filter",
                    "warnings": {},
                    "x": 60,
                    "y": 672
                },
                "6": {
                    "data": {
                        "action": "update artifact",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "ste runner artifact to label pending",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Phantom",
                        "connectorConfigs": [
                            "phantom"
                        ],
                        "connectorId": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "ste_runner_artifact_to_label_pending",
                        "id": "6",
                        "parameters": {
                            "artifact_id": "filtered-data:filter_runner_artifact:condition_1:artifact:*.id",
                            "label": "pending"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "artifact_id"
                            }
                        ],
                        "tab": "byAction",
                        "type": "action"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 852
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "build JSON from the response",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "build_json_from_the_response",
                        "id": "9",
                        "inputParameters": [
                            "check_the_status_of_the_prompt:action_result.data"
                        ],
                        "outputVariables": [
                            "response json"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    \n    \n    response = check_the_status_of_the_prompt_result_item_0[0]\n    response_data = response[0][\"response\"]\n    stringified_data = {key: str(value) for key, value in response_data.items()}\n    \n    \n    \n    build_json_from_the_response__response_json = { \"cef\": stringified_data }\n    \n    \n    phantom.debug(build_json_from_the_response__response_json)\n\n",
                    "warnings": {},
                    "x": 340,
                    "y": 680
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.10",
        "version": "6.1.0.131"
    },
    "create_time": "2023-08-15T09:38:51.102357+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}